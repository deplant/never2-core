.version sol 0.58.2

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDU 16
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDU 64
LDU 128
LDU 128
LDREF
ENDS
CTOS
LDU 128
ROLLREV 9
TUPLE 9
SWAP
ENDS
.loc Auction.sol, 194
GETGLOB 9
GETGLOB 11
SDEQ
THROWIFNOT 204
.loc Auction.sol, 40
SETGLOB 10
.loc Auction.sol, 0
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro getMinimumValue
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Auction.sol, 46
ENDS
.loc Auction.sol, 0
CALLREF {
	CALL $getMinimumValue_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 3144644610
	STUR 130
	STU 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro getMinimumValue_internal_macro
.loc Auction.sol, 48
GETGLOB 10
INDEX 6
PUSHINT 700000
.loc common/DeplantBase.sol, 40
MYADDR
PARSEMSGADDR
THIRD
CALLREF {
	CALL $__gasToTon_macro$
}
.loc common/DeplantBase.sol, 0
ADD
UFITS 128
.loc Auction.sol, 0

.macro getBidAddress
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Auction.sol, 51
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
ENDS
.loc Auction.sol, 0
CALLREF {
	CALL $getBidAddress_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	SWAP
	NEWC
	STSLICECONST xd26726bc
	STSLICE
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro getBidAddress_internal_macro
.loc Auction.sol, 53
CALLREF {
	CALL $_bidInit_internal_macro$
}
DROP
.loc Auction.sol, 0

.macro getCommitHash
DROP
GETGLOB 6
THROWIFNOT 76
.loc Auction.sol, 57
OVER
PUSHCONT {
	LDU 128
	LDU 128
	LDREF
	ENDS
	CTOS
}
PUSHCONT {
	LDU 128
	LDU 128
}
IFELSE
LDU 256
ENDS
.loc Auction.sol, 0
CALLREF {
	CALL $getCommitHash_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 3009756252
	STUR 130
	STU 256
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro getCommitHash_internal_macro
.loc Auction.sol, 58
ROT
.loc common/AuctionBase.sol, 51
NEWC
STU 128
.loc common/AuctionBase.sol, 52
XCHG S1, S2
STU 128
.loc common/AuctionBase.sol, 53
STU 256
.loc common/AuctionBase.sol, 54
ENDC
.loc common/AuctionBase.sol, 55
HASHCU
.loc Auction.sol, 0

.macro getWinner
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Auction.sol, 61
ENDS
.loc Auction.sol, 0
CALLREF {
	CALL $getWinner_internal_macro$
}
PUSH S2
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	XCHG S2
	NEWC
	STSLICECONST xd5842a90
	STSLICE
	STU 128
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP2
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro getWinner_internal_macro
.loc Auction.sol, 62
GETGLOB 16
FIRST
GETGLOB 17
INDEX 5
.loc Auction.sol, 0

.macro commit
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Auction.sol, 69
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
LDU 256
ENDS
.loc Auction.sol, 0
CALLREF {
	CALL $commit_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	SWAP
	NEWC
	STSLICECONST xe9f2242c
	STSLICE
	STBREFR
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 1
	STUR 106
	SWAP
	NEWC
	GETGLOB 4
	INDEX 5
	STUR 32
	STSLICE
	STBREFR
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro commit_internal_macro
.loc Auction.sol, 69
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc common/DeplantBase.sol, 45
PUSHINT 500000
.loc common/DeplantBase.sol, 40
MYADDR
PARSEMSGADDR
THIRD
CALLREF {
	CALL $__gasToTon_macro$
}
.loc common/DeplantBase.sol, 0
PUSHINT 0
RAWRESERVE
.loc Auction.sol, 70
DEPTH
ADDCONST -2
PICK
PUSHINT 700000
.loc common/DeplantBase.sol, 40
MYADDR
PARSEMSGADDR
THIRD
CALLREF {
	CALL $__gasToTon_macro$
}
.loc common/DeplantBase.sol, 0
GEQ
THROWIFNOT 666
.loc Auction.sol, 71
GETGLOB 9
CALLREF {
	CALL $_bidInit_internal_macro$
}
.loc Auction.sol, 75
GETGLOB 10
ROLL 3
GETGLOB 9
NEWC
STSLICECONST x0000b1dc
STSLICE
STU 256
SWAP
UNTUPLE 9
REVERSE 10, 0
ROLLREV 9
NEWC
STSLICE
ROLLREV 8
NEWC
STSLICE
STU 16
ROLLREV 6
NEWC
STSLICE
ROLLREV 5
NEWC
STSLICE
STU 64
STU 128
STU 128
SWAP
NEWC
STU 128
STBREFR
STBREFR
STBREFR
STBREFR
STBREFR
ENDC
.loc Auction.sol, 76
GETGLOB 14
INC
UFITS 64
SETGLOB 14
.loc Auction.sol, 77
GETGLOB 9
PUSHSLICE xc00000000000000000000000005a98f438
NEWC
STSLICE
STSLICE
ENDC
PUSHINT 0
SENDRAWMSG
.loc Auction.sol, 78
PUSHINT 600000
.loc common/DeplantBase.sol, 40
MYADDR
PARSEMSGADDR
THIRD
CALLREF {
	CALL $__gasToTon_macro$
}
.loc common/DeplantBase.sol, 0
PUSH S3
NEWC
STSLICECONST x42_
STSLICE
SWAP
STGRAMS
PUSHINT 3
STUR 107
ROT
DUP
CALLREF {
	CTOS
	LDI 1
	SWAP
	PUSHCONT {
		LDI 5
		NIP
	}
	IF
	LDI 1
	SWAP
	PUSHCONT {
		LDI 2
		NIP
	}
	IF
	LDOPTREF
	LDOPTREF
	LDDICT
	ENDS
	BLKDROP 3
}
STREFR
STSLICECONST 1
STREF
ENDC
PUSHINT 1
SENDRAWMSG
.loc Auction.sol, 79
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHINT 128
SETINDEXQ 4
SETGLOB 4
.loc Auction.sol, 0

.macro destroy
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Auction.sol, 82
ENDS
.loc Auction.sol, 0
CALLREF {
	CALL $destroy_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro destroy_internal_macro
.loc Auction.sol, 82
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc Auction.sol, 194
GETGLOB 9
GETGLOB 11
SDEQ
THROWIFNOT 204
.loc Auction.sol, 83
GETGLOB 9
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHINT 128
ADDCONST 32
UFITS 8
SENDRAWMSG
.loc Auction.sol, 0

.macro startReveal
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Auction.sol, 86
LDU 128
ENDS
.loc Auction.sol, 0
CALLREF {
	CALL $startReveal_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro startReveal_internal_macro
.loc Auction.sol, 86
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc Auction.sol, 194
GETGLOB 9
GETGLOB 11
SDEQ
THROWIFNOT 204
.loc Auction.sol, 87
DUP
GTINT 0
THROWIFNOT 305
.loc Auction.sol, 88
GETGLOB 10
PUSHINT 1
SETINDEX 2
DUP
SETGLOB 10
.loc Auction.sol, 89
OVER
SETINDEX 7
SETGLOB 10
.loc Auction.sol, 90
PUSHSLICE xc00000000000000000000000000f7170b9
NEWC
STSLICE
STU 128
ENDC
PUSHINT 0
SENDRAWMSG
.loc Auction.sol, 0

.macro startTrade
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Auction.sol, 93
ENDS
.loc Auction.sol, 0
CALLREF {
	CALL $startTrade_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro startTrade_internal_macro
.loc Auction.sol, 93
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc Auction.sol, 194
GETGLOB 9
GETGLOB 11
SDEQ
THROWIFNOT 204
.loc Auction.sol, 94
GETGLOB 15
PUSHCONT {
	.loc Auction.sol, 97
	GETGLOB 16
	FIRST
	CALLREF {
		CALL $_bidInit_internal_macro$
	}
	DROP
	.loc Auction.sol, 98
	GETGLOB 16
	INDEX 6
	GETGLOB 17
	INDEX 5
	GETGLOB 16
	FIRST
	PUSHSLICE xc000000000000000000000000057d27dc5
	NEWC
	STSLICE
	STSLICE
	STU 128
	STU 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
	.loc Auction.sol, 99
	GETGLOB 16
	INDEX 6
	GETGLOB 17
	INDEX 5
	PUSHINT 1
	ROLL 3
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 9789369574394656757036770681243717074945
	STUR 135
	ROLLREV 3
	NEWC
	STSLICECONST x0a1c5f10
	STU 16
	STU 128
	STU 128
	STBREFR
	ENDC
}
PUSHCONT {
	.loc Auction.sol, 95
	PUSHREF {
		.blob xc0000000000000000000000000762aae32
	}
}
IFELSE
PUSHINT 0
SENDRAWMSG
.loc Auction.sol, 0

.macro acceptReveal
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Auction.sol, 103
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
LDU 16
LDU 16
LDU 256
LDREF
ENDS
CTOS
LDU 256
LDU 128
LDU 128
LDU 128
LDU 128
ROLLREV 9
TUPLE 9
SWAP
ENDS
.loc Auction.sol, 0
CALLREF {
	CALL $acceptReveal_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	SWAP
	NEWC
	STSLICECONST xc3498610
	SWAP
	UNTUPLE 9
	REVERSE 10, 0
	STSLICE
	STU 16
	STU 16
	STU 256
	ROLLREV 5
	NEWC
	STU 256
	STU 128
	STU 128
	STU 128
	STU 128
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 1
	STUR 106
	SWAP
	NEWC
	GETGLOB 4
	INDEX 5
	STUR 32
	SWAP
	UNTUPLE 9
	REVERSE 10, 0
	STSLICE
	STU 16
	STU 16
	STU 256
	ROLLREV 5
	NEWC
	STU 256
	STU 128
	STU 128
	STU 128
	STU 128
	STBREFR
	STBREFR
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro acceptReveal_internal_macro
.loc Auction.sol, 103
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc common/DeplantBase.sol, 45
PUSHINT 500000
.loc common/DeplantBase.sol, 40
MYADDR
PARSEMSGADDR
THIRD
CALLREF {
	CALL $__gasToTon_macro$
}
.loc common/DeplantBase.sol, 0
PUSHINT 0
RAWRESERVE
.loc common/DeplantBase.sol, 78
DUP
FIRST
.loc Auction.sol, 199
CALLREF {
	CALL $_bidInit_internal_macro$
}
DROP
.loc Auction.sol, 200
GETGLOB 9
SDEQ
THROWIFNOT 205
.loc Auction.sol, 109
DUP
INDEX 5
GETGLOB 10
INDEX 7
GEQ
GETGLOB 10
THIRD
EQINT 1
AND
PUSHCONT {
	.loc Auction.sol, 110
	DUP
	INDEX 5
	GTINT 0
	GETGLOB 16
	INDEX 5
	EQINT 0
	AND
	PUSHCONT {
		.loc Auction.sol, 113
		DUP
		SETGLOB 16
		.loc Auction.sol, 114
		DUP
		SETGLOB 17
	}
	PUSHCONT {
		DUP
		INDEX 5
		GETGLOB 16
		INDEX 5
		GREATER
		PUSHCONT {
			.loc Auction.sol, 117
			GETGLOB 16
			SETGLOB 17
			.loc Auction.sol, 119
			DUP
			SETGLOB 16
		}
		PUSHCONT {
			DUP
			INDEX 5
			GETGLOB 17
			INDEX 5
			GREATER
			PUSHCONT {
				.loc Auction.sol, 122
				DUP
				SETGLOB 17
				.loc Auction.sol, 0
			}
			IF
		}
		IFELSE
	}
	IFELSE
	.loc Auction.sol, 124
	GETGLOB 15
	INC
	UFITS 64
	DUP
	SETGLOB 15
	.loc Auction.sol, 127
	GETGLOB 14
	EQUAL
	GETGLOB 14
	GTINT 0
	AND
	PUSHCONT {
		.loc Auction.sol, 128
		DUP
		FIRST
		GETGLOB 16
		FIRST
		SDEQ
		PUSHINT 1
		PUSHINT 2
		CONDSEL
		SETINDEX 2
		.loc Auction.sol, 0
	}
	PUSHCONT {
		.loc Auction.sol, 134
		PUSHINT 0
		SETINDEX 2
	}
	IFELSE
	.loc Auction.sol, 136
	PUSHINT 1
	SETINDEX 1
	.loc Auction.sol, 137
	DUP
	INDEX 6
	SETINDEX 8
	.loc Auction.sol, 138
	DUP
	INDEX 6
	OVER
	FIRST
	PUSHSLICE xc000000000000000000000000001eb41b8
	NEWC
	STSLICE
	STSLICE
	STU 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
	.loc Auction.sol, 0
}
IF
.loc Auction.sol, 140
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHINT 128
SETINDEXQ 4
SETGLOB 4
.loc Auction.sol, 0

.macro acceptLoserTrade
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc Auction.sol, 143
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
LDU 16
LDU 16
LDU 256
LDREF
ENDS
CTOS
LDU 256
LDU 128
LDU 128
LDU 128
LDU 128
ROLLREV 9
TUPLE 9
SWAP
LDU 128
ENDS
.loc Auction.sol, 0
CALLREF {
	CALL $acceptLoserTrade_internal_macro$
}
PUSH S3
PUSHCONT {
	PUSH S5
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 98
	STZEROES
	REVERSE 3, 1
	STSLICECONST xf87f818e
	STU 16
	STU 128
	STU 128
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 1
	STUR 106
	REVERSE 4, 0
	NEWC
	GETGLOB 4
	INDEX 5
	STUR 32
	STU 16
	STU 128
	STU 128
	STBREFR
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro acceptLoserTrade_internal_macro
.loc Auction.sol, 143
DEPTH
ADDCONST -5
PICK
THROWIF 72
.loc common/DeplantBase.sol, 45
PUSHINT 500000
.loc common/DeplantBase.sol, 40
MYADDR
PARSEMSGADDR
THIRD
CALLREF {
	CALL $__gasToTon_macro$
}
.loc common/DeplantBase.sol, 0
PUSHINT 0
RAWRESERVE
.loc Auction.sol, 147
SWAP
FIRST
CALLREF {
	CALL $_bidInit_internal_macro$
}
DROP
.loc Auction.sol, 148
GETGLOB 9
SDEQ
THROWIFNOT 205
.loc Auction.sol, 149
GETGLOB 10
THIRD
EQINT 2
THROWIFNOT 402
.loc Auction.sol, 150
GETGLOB 15
GTINT 0
THROWIFNOT 403
.loc Auction.sol, 151
GETGLOB 17
INDEX 5
GETGLOB 10
INDEX 8
DIVC
.loc Auction.sol, 152
PUSHINT 2
XCHG S2
.loc common/DeplantBase.sol, 88
GETGLOB 9
.loc common/DeplantBase.sol, 50
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHINT 128
SENDRAWMSG
.loc Auction.sol, 0

.globl	_bidInit_internal
.type	_bidInit_internal, @function
CALL $_bidInit_internal_macro$

.macro _bidInit_internal_macro
.loc Auction.sol, 160
PUSHINT 0
NEWC
STU 256
PUSHINT 0
NEWDICT
PUSHINT 64
DICTUSETB
MYADDR
PUSHINT 1
ROT
PUSHINT 64
DICTUSET
SWAP
PUSHINT 2
ROT
PUSHINT 64
DICTUSET
NEWC
STDICT
ENDC
GETGLOB 12
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
.loc Auction.sol, 169
DUP
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
SWAP
.loc Auction.sol, 0

.globl	_reversePrice_internal
.type	_reversePrice_internal, @function
CALL $_reversePrice_internal_macro$

.macro _reversePrice_internal_macro
.loc common/DeplantBase.sol, 56
PUSHINT 1000000000
DUP
ROT
MULDIVC
UFITS 128
.loc common/DeplantBase.sol, 0

.globl	_exchange_internal
.type	_exchange_internal, @function
CALL $_exchange_internal_macro$

.macro _exchange_internal_macro
.loc common/DeplantBase.sol, 66
PUSHINT 1000000000
MULDIV
UFITS 128
.loc common/DeplantBase.sol, 0

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDU 16
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDU 64
LDU 128
LDU 128
LDREF
ENDS
CTOS
LDU 128
ROLLREV 9
TUPLE 9
SWAP
LDMSGADDR
LDREF
LDU 64
LDU 64
LDU 64
LDREF
ENDS
CTOS
LDMSGADDR
LDU 16
LDU 16
LDU 256
LDREF
ENDS
CTOS
LDU 256
LDU 128
LDU 128
LDU 128
LDU 128
ROLLREV 9
TUPLE 9
SWAP
LDREF
ENDS
CTOS
LDMSGADDR
LDU 16
LDU 16
LDU 256
LDREF
ENDS
CTOS
LDU 256
LDU 128
LDU 128
LDU 128
LDU 128
ROLLREV 9
TUPLE 9
SWAP
ENDS
SETGLOB 17
SETGLOB 16
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	DUP
	PUSHINT 0
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	DUP
	PUSHINT 0
	BLKPUSH 3, 0
	TUPLE 9
	PUSHINT 1
	PUSH S2
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PUSHREFSLICE {
			.blob x8000000000000000000000000000000000000000000000000000000000000000001_
		}
	}
	IFNOT
	PUSHINT 2
	PUSH S3
	PUSHINT 64
	DICTUGETREF
	PUSHCONT {
		PUSHREF {
		}
	}
	IFNOT
	PUSHINT 3
	PUSH S4
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PLDU 64
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	PUSHINT 0
	DUP
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	PUSHINT 0
	BLKPUSH 7, 0
	TUPLE 9
	DUP
	SETGLOB 17
	SETGLOB 16
	SETGLOB 15
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
}
IFREFELSE {
	CALL $c4_to_c7$
}

.macro c7_to_c4
GETGLOB 17
GETGLOB 16
GETGLOB 15
GETGLOB 14
GETGLOB 13
GETGLOB 12
GETGLOB 11
GETGLOB 10
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
SWAP
UNTUPLE 9
REVERSE 10, 0
STSLICE
ROLLREV 15
NEWC
STSLICE
STU 16
ROLLREV 13
NEWC
STSLICE
ROLLREV 12
NEWC
STSLICE
STU 64
STU 128
STU 128
ROLLREV 8
NEWC
STU 128
STSLICE
STREF
STU 64
STU 64
STU 64
SWAP
UNTUPLE 9
REVERSE 10, 0
ROLLREV 10
NEWC
STSLICE
STU 16
STU 16
STU 256
ROLLREV 6
NEWC
STU 256
STU 128
STU 128
STU 128
STU 128
SWAP
UNTUPLE 9
REVERSE 10, 0
ROLLREV 9
NEWC
STSLICE
STU 16
STU 16
STU 256
ROLLREV 5
NEWC
STU 256
STU 128
STU 128
STU 128
STU 128
STBREFR
STBREFR
STBREFR
STBREFR
STBREFR
STBREFR
STBREFR
STBREFR
ENDC
POPROOT

.macro upd_only_time_in_c4
PUSHROOT
CTOS
LDU 256
LDU 64
NIP
GETGLOB 3
ROT
NEWC
STU 256
STU 64
STSLICE
ENDC
POPROOT

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
LDU 4 ; bounced tail
LDMSGADDR ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
GETGLOB 4
TRUE
SETINDEXQ 1
PUSHINT 10000000
SETINDEXQ 2
NULL
SETINDEXQ 3
PUSHINT 0
SETINDEXQ 4
SETGLOB 4
IFRET
OVER
SEMPTY ; isEmpty
IFJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
OVER
LDUQ 32  ; [funcId] body' ok
THROWIFNOT 60
OVER
IFNOTJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 9
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP
	HASHSU ; signatureSlice msgSlice hashMsgSlice
	ROT
	GETGLOB 2
	CHKSIGNU ; msgSlice isSigned
	THROWIFNOT 40
}
IF
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; expireAt msgSlice
SWAP
NOW ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.macro _rules
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 10
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000001
	NEWC
	STSLICE
	SWAP
	NEWC
	STSLICECONST xd1c8eb82
	SWAP
	UNTUPLE 9
	REVERSE 10, 0
	STSLICE
	ROLLREV 8
	NEWC
	STSLICE
	STU 16
	ROLLREV 6
	NEWC
	STSLICE
	ROLLREV 5
	NEWC
	STSLICE
	STU 64
	STU 128
	STU 128
	SWAP
	NEWC
	STU 128
	STBREFR
	STBREFR
	STBREFR
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro _bidCount
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 14
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000db4b10de
	NEWC
	STSLICE
	STU 64
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro _revealCount
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 15
OVER
PUSHCONT {
	PUSHSLICE xc0000000000000000000000000c157b879
	NEWC
	STSLICE
	STU 64
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
THROW 0

.macro public_function_selector
DUP
PUSHINT 997160962
LEQ
IFJMPREF {
	DUP
	PUSHINT 629528867
	EQUAL
	IFJMPREF {
		CALL $destroy$
	}
	DUP
	PUSHINT 784400452
	EQUAL
	IFJMPREF {
		CALL $startTrade$
	}
	DUP
	PUSHINT 862272604
	EQUAL
	IFJMPREF {
		CALL $getCommitHash$
	}
	DUP
	PUSHINT 997160962
	EQUAL
	IFJMPREF {
		CALL $getMinimumValue$
	}
}
DUP
PUSHINT 1248982768
LEQ
IFJMPREF {
	DUP
	PUSHINT 1009729419
	EQUAL
	IFJMPREF {
		CALL $constructor$
	}
	DUP
	PUSHINT 1096267897
	EQUAL
	IFJMPREF {
		CALL $_revealCount$
	}
	DUP
	PUSHINT 1128891920
	EQUAL
	IFJMPREF {
		CALL $acceptReveal$
	}
	DUP
	PUSHINT 1248982768
	EQUAL
	IFJMPREF {
		CALL $startReveal$
	}
}
DUP
PUSHINT 1531646174
LEQ
IFJMPREF {
	DUP
	PUSHINT 1372121986
	EQUAL
	IFJMPREF {
		CALL $_rules$
	}
	DUP
	PUSHINT 1382491836
	EQUAL
	IFJMPREF {
		CALL $getBidAddress$
	}
	DUP
	PUSHINT 1434725008
	EQUAL
	IFJMPREF {
		CALL $getWinner$
	}
	DUP
	PUSHINT 1531646174
	EQUAL
	IFJMPREF {
		CALL $_bidCount$
	}
}
DUP
PUSHINT 2021622158
LEQ
IFJMPREF {
	DUP
	PUSHINT 1777476652
	EQUAL
	IFJMPREF {
		CALL $commit$
	}
	DUP
	PUSHINT 2021622158
	EQUAL
	IFJMPREF {
		CALL $acceptLoserTrade$
	}
}

